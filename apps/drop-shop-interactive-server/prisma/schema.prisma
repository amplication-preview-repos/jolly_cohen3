datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Order {
  createdAt  DateTime         @default(now())
  customer   Customer?        @relation(fields: [customerId], references: [id])
  customerId String?          @db.ObjectId
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  product    Product?         @relation(fields: [productId], references: [id])
  productId  String?          @db.ObjectId
  quantity   Int?
  status     EnumOrderStatus?
  totalPrice Float?
  updatedAt  DateTime         @updatedAt
}

model Product {
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String?
  orders      Order[]
  price       Float?
  stock       Int?
  supplier    Supplier? @relation(fields: [supplierId], references: [id])
  supplierId  String?   @db.ObjectId
  updatedAt   DateTime  @updatedAt
}

model Admin {
  createdAt DateTime       @default(now())
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  password  String?
  role      EnumAdminRole?
  updatedAt DateTime       @updatedAt
  username  String?
}

model Supplier {
  address   String?
  createdAt DateTime  @default(now())
  email     String?
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  phone     String?
  products  Product[]
  updatedAt DateTime  @updatedAt
}

model Customer {
  address   String?
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  orders    Order[]
  phone     String?
  updatedAt DateTime @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

enum EnumOrderStatus {
  Option1
}

enum EnumAdminRole {
  Option1
}
